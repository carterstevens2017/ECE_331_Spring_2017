Carter Stevens
ECE 331 HW5

1) [-+]?[\d]*\.?[\d]+([eE][-+]?[\d]+)?

2)
//morse.txt
A * ---
B --- * * *
C --- * --- *
D --- * *
E *
F * * --- *
G --- --- *
H * * * *
I * *
J * --- --- ---
K --- * ---
L * --- * *
M --- ---
N --- *
O --- --- ---
P * --- --- *
Q --- --- * ---
R * --- *
S * * *
T ---
U * * ---
V * * * ---
W * --- ---
X --- * * ---
Y --- * --- ---
Z --- --- * *
1 * --- --- --- ---
2 * * --- --- ---
3 * * * --- ---
4 * * * * ---
5 * * * * *
6 --- * * * *
7 --- --- * * *
8 --- --- --- * *
9 --- --- --- --- *
0 --- --- --- --- ---

//------------------------------------------------------------
//morse_create.pl
#!/usr/bin/perl

open($morsedata, 'morse.txt') 
	or die "Could not open file morse.txt";
$i = 0;
%hash;
while ($row = <$morsedata>) {
	chomp $row;
	@encode = split(' ', $row, 2);
	$encode[1] =~ s/\*/1/g;
	$encode[1] =~ s/ /0/g;
	$encode[1] =~ s/\-/1/g;
	$encode[1] = reverse $encode[1];
	$encode[1] = "0b" . $encode[1];
	print $encode[0] . ": ";
	print $encode[1] . "\n";
	$hash{$encode[0]} = $encode[1];
}
open($h, '>', 'morse.h') or die "Could not open file 'morse.h'";
print $h "struct morse_char{\n\tint len;\n\tint val;\n};\n\n";
print $h "extern struct morse_char lookup[256];\n\n";
print $h "void initmorse(void);";
close $h;

open($c, '>', 'morse.c') or die "Could not open file 'morse.c'";
print $c "#include \"morse.h\"\n\n";
print $c "struct morse_char lookup[256];\n\n";
print $c "void initmorse(void){\n";
print $c "\tint i = 0;\n";
print $c "\tfor(i=0; i<256; i++){\n\t\tlookup[i].val = 0;\n\t\tlookup[i].len = 0;\n\t}\n";

while (($key, $value) = each(%hash)) { 
	$len = length $value;
	$num = ord($key);
	print $c "\tlookup[$num].val = $value; lookup[$num].len = $len;\n";
}
print $c "}";

//--------------------------------------------------------------
//hw5.c
#include "morse.h"
#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <ctype.h>

int main(int argc, char *argv[]){
	
	
	initmorse();
	char *input;
	int len, i;
	unsigned int j;
	struct morse_char morse;
	
	//check for number of arguments
	if(argc!=2){
		perror("Incorrect number of arguments");
		return 1;
	}
	
	//gets data and size of input string
	input = argv[1];
	len = strlen(input);
	
	//print preamble
	printf("__*_");
	//iterates through input characters
	for(i = 0; i < len; i++){
		j=0;
		if(*(input + i) == ' ') printf("_______");
		else{
			//retrievs info from lookup table
			morse = lookup[toupper((int)*(input+i))];
			//looks through bits, converts 1 to * 0 to _
			while(morse.val > 0){
				if((morse.val & (0x01<<j)) != 0) printf("*");
				else printf("_");
				morse.val &= ~(0x01<<j); 
				j++;
			}
			//checks if there is a next letter
			if(((i+1) < len) && (*(input + i + 1) != ' ')) printf("___");
		}
	}
	printf("\n");	
	return 0;
}

//----------------------------------------------------------------
// Makefile
TARGET = morse
OBJS = morse.o hw5.o
CFLAGS = -g -Wall
LIBS = -lm

.PHONY: all clean

all: ${TARGET}
${TARGET}: ${OBJS}
	${CC} -o ${TARGET} ${OBJS} ${LIBS}

clean:
	rm -f ${TARGET} ${OBJS}
